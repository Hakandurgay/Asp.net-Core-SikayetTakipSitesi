// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SikayetTakipSitesi.Data;

namespace SikayetTakipSitesi.Migrations
{
    [DbContext(typeof(SikayetDbContext))]
    partial class SikayetDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("SikayetTakipSitesi.Models.Brand", b =>
                {
                    b.Property<int>("PK_BRAND_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("BrandName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BrandPhoto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("BrandStatus")
                        .HasColumnType("bit");

                    b.HasKey("PK_BRAND_ID");

                    b.ToTable("Brands");
                });

            modelBuilder.Entity("SikayetTakipSitesi.Models.Category", b =>
                {
                    b.Property<int>("PK_CATEGORY_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("CategoryName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("CategoryStatus")
                        .HasColumnType("bit");

                    b.HasKey("PK_CATEGORY_ID");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("SikayetTakipSitesi.Models.CategoryBrand", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("BrandId")
                        .HasColumnType("int");

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("BrandId");

                    b.HasIndex("CategoryId");

                    b.ToTable("CategoryBrands");
                });

            modelBuilder.Entity("SikayetTakipSitesi.Models.Comment", b =>
                {
                    b.Property<int>("PK_COMMENT_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("CommentContent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("CommentStatus")
                        .HasColumnType("bit");

                    b.Property<bool>("CommentSwitchActive")
                        .HasColumnType("bit");

                    b.Property<int?>("ComplaintId")
                        .HasColumnType("int");

                    b.Property<int?>("MemberId")
                        .HasColumnType("int");

                    b.HasKey("PK_COMMENT_ID");

                    b.HasIndex("ComplaintId");

                    b.HasIndex("MemberId");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("SikayetTakipSitesi.Models.Complaint", b =>
                {
                    b.Property<int>("PK_COMPLAINT_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("BrandId")
                        .HasColumnType("int");

                    b.Property<string>("ComplaintContent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ComplaintStatus")
                        .HasColumnType("bit");

                    b.Property<bool>("ComplaintSwitchActive")
                        .HasColumnType("bit");

                    b.Property<string>("ComplaintTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MemberId")
                        .HasColumnType("int");

                    b.HasKey("PK_COMPLAINT_ID");

                    b.HasIndex("BrandId");

                    b.HasIndex("MemberId");

                    b.ToTable("Complaints");
                });

            modelBuilder.Entity("SikayetTakipSitesi.Models.Member", b =>
                {
                    b.Property<int>("PK_MEMBER_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("MemberLastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MemberMail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MemberName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MemberPassword")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MemberPhoto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("MemberStatus")
                        .HasColumnType("bit");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("PK_MEMBER_ID");

                    b.HasIndex("RoleId");

                    b.ToTable("Members");
                });

            modelBuilder.Entity("SikayetTakipSitesi.Models.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("RoleName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RoleId");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("SikayetTakipSitesi.Models.CategoryBrand", b =>
                {
                    b.HasOne("SikayetTakipSitesi.Models.Brand", "Brand")
                        .WithMany()
                        .HasForeignKey("BrandId");

                    b.HasOne("SikayetTakipSitesi.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId");

                    b.Navigation("Brand");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("SikayetTakipSitesi.Models.Comment", b =>
                {
                    b.HasOne("SikayetTakipSitesi.Models.Complaint", "Complaint")
                        .WithMany()
                        .HasForeignKey("ComplaintId");

                    b.HasOne("SikayetTakipSitesi.Models.Member", "Member")
                        .WithMany()
                        .HasForeignKey("MemberId");

                    b.Navigation("Complaint");

                    b.Navigation("Member");
                });

            modelBuilder.Entity("SikayetTakipSitesi.Models.Complaint", b =>
                {
                    b.HasOne("SikayetTakipSitesi.Models.Brand", "FK_BRAND_ID")
                        .WithMany()
                        .HasForeignKey("BrandId");

                    b.HasOne("SikayetTakipSitesi.Models.Member", "FK_MEMBER_ID")
                        .WithMany()
                        .HasForeignKey("MemberId");

                    b.Navigation("FK_BRAND_ID");

                    b.Navigation("FK_MEMBER_ID");
                });

            modelBuilder.Entity("SikayetTakipSitesi.Models.Member", b =>
                {
                    b.HasOne("SikayetTakipSitesi.Models.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });
#pragma warning restore 612, 618
        }
    }
}
